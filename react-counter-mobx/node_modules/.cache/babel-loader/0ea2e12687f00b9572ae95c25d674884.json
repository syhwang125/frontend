{"ast":null,"code":"import _initializerDefineProperty from \"/Users/youngminlee/gitrepository/frontend/react-counter-mobx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/youngminlee/gitrepository/frontend/react-counter-mobx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/youngminlee/gitrepository/frontend/react-counter-mobx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _temp;\n\nimport { action, makeObservable, observable } from 'mobx';\nimport { version } from 'react-dom';\nlet CounterStore = (_class = (_temp = class CounterStore {\n  constructor() {\n    _initializerDefineProperty(this, \"_count\", _descriptor, this);\n\n    makeObservable(this);\n  }\n\n  get count() {\n    return this._count;\n  }\n\n  increment() {\n    this._count++;\n    console.log(this._count);\n  }\n\n  decrement() {\n    this._count--;\n    console.log(this._count);\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"_count\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return 4;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"increment\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"increment\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"decrement\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"decrement\"), _class.prototype)), _class);\nexport default new CounterStore();","map":{"version":3,"sources":["/Users/youngminlee/gitrepository/frontend/react-counter-mobx/src/store/CounterStore.js"],"names":["action","makeObservable","observable","version","CounterStore","constructor","count","_count","increment","console","log","decrement"],"mappings":";;;;;;AAAA,SAASA,MAAT,EAAiBC,cAAjB,EAAiCC,UAAjC,QAAmD,MAAnD;AACA,SAASC,OAAT,QAAwB,WAAxB;IAGMC,Y,sBAAN,MAAMA,YAAN,CAAmB;AAEfC,EAAAA,WAAW,GAAG;AAAA;;AACVJ,IAAAA,cAAc,CAAC,IAAD,CAAd;AACH;;AAKD,MAAIK,KAAJ,GAAY;AACR,WAAO,KAAKC,MAAZ;AACH;;AAGDC,EAAAA,SADA,GACY;AACR,SAAKD,MAAL;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,MAAjB;AACH;;AAGDI,EAAAA,SADA,GACY;AACR,SAAKJ,MAAL;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,MAAjB;AACH;;AAvBc,C,gFAMdL,U;;;;;WACQ,C;;8DAMRF,M,gJAMAA,M;AAQL,eAAe,IAAII,YAAJ,EAAf","sourcesContent":["import { action, makeObservable, observable } from 'mobx';\nimport { version } from 'react-dom';\n\n\nclass CounterStore {\n\n    constructor (){\n        makeObservable(this);\n    }\n\n    @observable     // decorator 를 이용하면 바벨에 의해 인식 \n    _count = 4;\n\n    get count() {\n        return this._count;\n    }\n\n    @action\n    increment() {\n        this._count ++;\n        console.log(this._count);\n    }\n\n    @action\n    decrement() {\n        this._count --; \n        console.log(this._count);\n    }\n   \n}\n\nexport default new CounterStore(); "]},"metadata":{},"sourceType":"module"}