{"ast":null,"code":"import _initializerDefineProperty from \"/Users/youngminlee/gitrepository/frontend/react-todo-mobx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/youngminlee/gitrepository/frontend/react-todo-mobx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/youngminlee/gitrepository/frontend/react-todo-mobx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _temp;\n\nimport { observable, action, computed, makeObservable, toJS } from 'mobx';\nlet TodoStore = (_class = (_temp = class TodoStore {\n  constructor() {\n    _initializerDefineProperty(this, \"_todo\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"_todos\", _descriptor2, this);\n\n    makeObservable(this); //mobx5 버전이후 mobx6에서는 반드시 정의해야, 데이터 변경시 반영됨. \n  }\n\n  get todo() {\n    return this._todo;\n  }\n\n  get todos() {\n    return this._todos ? this._todos.slice() : []; // return toJS(this._todos);\n  }\n\n  setTodoProps(name, value) {\n    this._todo = { ...this._todo,\n      // ... 전개 연산자로 전체 객체르르 그대로 넘겨줌 \n      [name]: value\n    };\n  }\n\n  addTodo(todo) {\n    this._todos.push(todo);\n  }\n\n  selectedTodo(todo) {\n    this._todo = todo;\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"_todo\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return {// title : 'test', \n    };\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"_todos\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"setTodoProps\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setTodoProps\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"addTodo\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"addTodo\"), _class.prototype)), _class);\nexport default new TodoStore();","map":{"version":3,"sources":["/Users/youngminlee/gitrepository/frontend/react-todo-mobx/src/store/TodoStore.js"],"names":["observable","action","computed","makeObservable","toJS","TodoStore","constructor","todo","_todo","todos","_todos","slice","setTodoProps","name","value","addTodo","push","selectedTodo"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,QAA7B,EAAuCC,cAAvC,EAAwDC,IAAxD,QAAmE,MAAnE;IAEMC,S,sBAAN,MAAMA,SAAN,CAAgB;AAEZC,EAAAA,WAAW,GAAG;AAAA;;AAAA;;AACVH,IAAAA,cAAc,CAAC,IAAD,CAAd,CADU,CACc;AAC3B;;AAUD,MAAII,IAAJ,GAAW;AACP,WAAO,KAAKC,KAAZ;AACH;;AAED,MAAIC,KAAJ,GAAY;AACR,WAAO,KAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,KAAZ,EAAd,GAAoC,EAA3C,CADQ,CAER;AACH;;AAGDC,EAAAA,YADA,CACaC,IADb,EACmBC,KADnB,EAC0B;AACtB,SAAKN,KAAL,GAAa,EACT,GAAG,KAAKA,KADC;AACS;AAClB,OAACK,IAAD,GAASC;AAFA,KAAb;AAIH;;AAGDC,EAAAA,OADA,CACQR,IADR,EACc;AACV,SAAKG,MAAL,CAAYM,IAAZ,CAAiBT,IAAjB;AACH;;AAEDU,EAAAA,YAAY,CAACV,IAAD,EAAO;AACf,SAAKC,KAAL,GAAaD,IAAb;AACH;;AAtCW,C,+EAMXP,U;;;;;WACO,CACL;AADK,K;;0EAIPA,U;;;;;WACQ,E;;iEAWRC,M,iJAQAA,M;AAWL,eAAe,IAAII,SAAJ,EAAf","sourcesContent":["import { observable, action, computed, makeObservable , toJS} from 'mobx';\n\nclass TodoStore {\n\n    constructor() {\n        makeObservable(this);   //mobx5 버전이후 mobx6에서는 반드시 정의해야, 데이터 변경시 반영됨. \n    }\n\n    @observable \n    _todo = {\n       // title : 'test', \n    }   // id, title, date \n\n    @observable\n    _todos = [];\n\n    get todo() {\n        return this._todo;\n    }\n\n    get todos() {\n        return this._todos ? this._todos.slice() : [];\n        // return toJS(this._todos);\n    }\n\n    @action\n    setTodoProps(name, value) {\n        this._todo = {\n            ...this._todo,    // ... 전개 연산자로 전체 객체르르 그대로 넘겨줌 \n            [name] : value\n        }\n    }\n\n    @action \n    addTodo(todo) {\n        this._todos.push(todo);\n    }\n\n    selectedTodo(todo) {\n        this._todo = todo;\n    }\n}\n\n\nexport default new TodoStore();"]},"metadata":{},"sourceType":"module"}