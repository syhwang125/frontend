{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/youngminlee/gitrepository/frontend/react-todo-mobx/src/containers/TodoListContainer.js\",\n    _dec,\n    _class;\n\nimport React, { Component } from 'react';\nimport TodoListView from '../views/TodoListView';\nimport { inject, observer } from 'mobx-react';\nlet TodoListContainer = (_dec = inject('todoStore'), _dec(_class = observer(_class = class TodoListContainer extends Component {\n  onSelectedTodo(todo) {\n    this.props.todoStore.selectedTodo(todo);\n  }\n\n  render() {\n    const {\n      todos\n    } = this.props.todoStore;\n    console.log(todos);\n    return /*#__PURE__*/_jsxDEV(TodoListView, {\n      todos: todos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n\n}) || _class) || _class);\nexport default TodoListContainer;","map":{"version":3,"sources":["/Users/youngminlee/gitrepository/frontend/react-todo-mobx/src/containers/TodoListContainer.js"],"names":["React","Component","TodoListView","inject","observer","TodoListContainer","onSelectedTodo","todo","props","todoStore","selectedTodo","render","todos","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AAEA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;IAIMC,iB,WAFLF,MAAM,CAAC,WAAD,C,gBACNC,Q,UADD,MAEMC,iBAFN,SAEgCJ,SAFhC,CAE0C;AAExCK,EAAAA,cAAc,CAACC,IAAD,EAAO;AACnB,SAAKC,KAAL,CAAWC,SAAX,CAAqBC,YAArB,CAAkCH,IAAlC;AACD;;AAEDI,EAAAA,MAAM,GAAE;AAEN,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKJ,KAAL,CAAWC,SAA7B;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,wBACE,QAAC,YAAD;AACE,MAAA,KAAK,EAAKA;AADZ;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAhBuC,C;AAmB1C,eAAeP,iBAAf","sourcesContent":["import React, { Component } from 'react';\nimport TodoListView from '../views/TodoListView';\n\nimport { inject, observer } from 'mobx-react';\n\n@inject('todoStore')\n@observer\nclass TodoListContainer extends Component {\n\n  onSelectedTodo(todo) {\n    this.props.todoStore.selectedTodo(todo);\n  }\n  \n  render(){\n\n    const { todos } = this.props.todoStore;\n    console.log(todos)\n\n    return (\n      <TodoListView\n        todos = { todos }\n      />\n    )\n  }\n}\n\nexport default TodoListContainer;"]},"metadata":{},"sourceType":"module"}